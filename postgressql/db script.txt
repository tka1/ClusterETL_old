CREATE TABLE cluster.clustertable
(
  title character varying,
  decall character varying,
  dxcall character varying,
  freq numeric,
  band character varying,
  country character varying,
  id serial NOT NULL,
  sig_noise character varying,
  datetime timestamp without time zone,
  insert_time timestamp without time zone DEFAULT now(),
  CONSTRAINT clustertable_pkey PRIMARY KEY (id)
)
WITH (
  OIDS=FALSE
);
ALTER TABLE cluster.clustertable
  OWNER TO postgres;
GRANT ALL ON TABLE cluster.clustertable TO postgres;
GRANT SELECT, UPDATE, INSERT, TRUNCATE, DELETE ON TABLE cluster.clustertable TO public;

CREATE OR REPLACE VIEW cluster.band_count AS 
 SELECT count(DISTINCT clustertable.dxcall) AS kountti,
    clustertable.band
   FROM cluster.clustertable
  WHERE (now() - clustertable.insert_time::timestamp with time zone) < '01:00:00'::interval
  GROUP BY clustertable.band
  ORDER BY (count(clustertable.dxcall)) DESC;

ALTER TABLE cluster.band_count
  OWNER TO postgres;

  CREATE OR REPLACE VIEW cluster.country_count AS 
 SELECT count(DISTINCT clustertable.dxcall) AS kountti,
    clustertable.country
   FROM cluster.clustertable
  WHERE (now() - clustertable.insert_time::timestamp with time zone) < '01:00:00'::interval
  GROUP BY clustertable.country;

ALTER TABLE cluster.country_count
  OWNER TO postgres;

  CREATE OR REPLACE VIEW cluster.cumul_spot_count AS 
 SELECT count(DISTINCT clustertable.dxcall) AS spot_count,
    to_char(clustertable.insert_time, 'dd/HH24'::text) AS "day/hour"
   FROM cluster.clustertable
  WHERE (now() - clustertable.insert_time::timestamp with time zone) < '48:00:00'::interval
  GROUP BY (to_char(clustertable.insert_time, 'dd/HH24'::text))
  ORDER BY (to_char(clustertable.insert_time, 'dd/HH24'::text));

ALTER TABLE cluster.cumul_spot_count
  OWNER TO postgres;
